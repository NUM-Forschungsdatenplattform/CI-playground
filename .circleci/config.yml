version: 2.1

# OVERVIEW - What this CI pipeline does:
#
# 1. TODO


workflows:

# WORKFLOW 1/? Build & Test FHIR-bridge
  build_and_test_fhirbridge:
    jobs:
      - build-and-test-fhirbridge:
          filters:
            branches:
              ignore:
                - master
                - develop
                - release







jobs:
    #           88    ,ad8888ba,    88888888ba    ad88888ba
    #           88   d8"'    `"8b   88      "8b  d8"     "8b
    #           88  d8'        `8b  88      ,8P  Y8,
    #           88  88          88  88aaaaaa8P'  `Y8aaaaa,
    #           88  88          88  88""""""8b,    `"""""8b,
    #           88  Y8,        ,8P  88      `8b          `8b
    #   88,   ,d88   Y8a.    .a8P   88      a8P  Y8a     a8P
    #    "Y8888P"     `"Y8888Y"'    88888888P"    "Y88888P"
    
    
    build-and-test-fhirbridge:
        description: Build and unit test the SDK.
        executor: vm-ubuntu-1604
        steps:
        - checkout
        # - cache-out-sdk-m2-dependencies
        - mvn-clean-verify
        # - cache-in-sdk-m2-dependencies
        # - collect-sdk-unittest-results
        # - save-skd-test-results
        # - save-sdk-workspace
        #-----------------------------------#---------------(use this steps for pipeline debugging only)
        # - run: echo mock build SDK        # 
        # - cache-out-sdk-workspace         #
        # - cache-in-sdk-workspace          #







commands:
    #     ,ad8888ba,    ,ad8888ba,    88b           d88  88b           d88         db         888b      88  88888888ba,     ad88888ba
    #    d8"'    `"8b  d8"'    `"8b   888b         d888  888b         d888        d88b        8888b     88  88      `"8b   d8"     "8b
    #   d8'           d8'        `8b  88`8b       d8'88  88`8b       d8'88       d8'`8b       88 `8b    88  88        `8b  Y8,
    #   88            88          88  88 `8b     d8' 88  88 `8b     d8' 88      d8'  `8b      88  `8b   88  88         88  `Y8aaaaa,
    #   88            88          88  88  `8b   d8'  88  88  `8b   d8'  88     d8YaaaaY8b     88   `8b  88  88         88    `"""""8b,
    #   Y8,           Y8,        ,8P  88   `8b d8'   88  88   `8b d8'   88    d8""""""""8b    88    `8b 88  88         8P          `8b
    #    Y8a.    .a8P  Y8a.    .a8P   88    `888'    88  88    `888'    88   d8'        `8b   88     `8888  88      .a8P   Y8a     a8P
    #     `"Y8888Y"'    `"Y8888Y"'    88     `8'     88  88     `8'     88  d8'          `8b  88      `888  88888888Y"'     "Y88888P"
    
    
    mvn-clean-verify:
        description: | 
            Executest `mvn clean verify`
            testcontainers(.org) dependency ensures that ehrbase server
            and postgresql db are started before integration tests a run.
        steps:
            - openjdk-install/openjdk:
                version: 11
            - install-maven
            - run:
                command: |
                    ls -la
                    mvn --version
                    java --version
                    mvn clean verify





# ///////////////////////////////////////////////////////////////////////////
# /// HELPER COMMANDS                                                    ///
# ///////////////////////////////////////////////////////////////////////////

    install-maven:
        description: Installs Maven tool (but only if it's not already installed)
        steps:
            - run: 
                name: Install Maven tool
                command: |
                    [ -f /usr/bin/mvn ] && echo "Maven is already installed." || sudo apt install maven -y





# ///////////////////////////////////////////////////////////////////////////
# /// CIRCLECI META                                                       ///
# ///////////////////////////////////////////////////////////////////////////


orbs:
    openjdk-install: cloudesire/openjdk-install@1.2.3
    sonarcloud: sonarsource/sonarcloud@1.0.2
  
executors:
    docker-python3-java11:
        working_directory: ~/projects
        docker:
            - image: circleci/python@sha256:e1c98a85c5ee62ac52a2779fe5abe2677f021c8e3158e4fb2d569c7b9c6ac073

    docker-py3-java11-postgres:
        working_directory: ~/projects
        docker:
            - image: circleci/python@sha256:e1c98a85c5ee62ac52a2779fe5abe2677f021c8e3158e4fb2d569c7b9c6ac073
            - image: ehrbaseorg/ehrbase-postgres:10
              environment:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres

    vm-ubuntu-1604:
        working_directory: ~/projects
        # working_directory: /mnt/ramdisk      # TODO: @wlad TEST THIS FOR POSSIBLE
        machine:                               #             SPEED IMPROVEMENT !!!
            # image: ubuntu-1604:201903-01
            image: ubuntu-1604:202007-01        # what's inside:
                                                # Ubuntu 16.04
                                                # Docker v19.03.12
                                                # Docker Compose v1.26.1
